/* Generated by SConstruct *** DO NOT EDIT! *** */


#ifndef __CONFIG_VARS_EXTERNS_H__
#define __CONFIG_VARS_EXTERNS_H__

// Integer array                              
// Note: If you change this you must change it in ioctl-types.h
#ifndef INT_ARRAY_MAX_ELEMENTS                
#define INT_ARRAY_MAX_ELEMENTS      256       
typedef struct _int_array_s_                  
{                                             
    int     num_elements_used;                
    int     array[INT_ARRAY_MAX_ELEMENTS];    
} int_array_t;                                
#endif // not defined INT_ARRAY_MAX_ELEMENTS  

#if defined(__KERNEL__)

int fio_config_table_init(void); // For EXTERNAL_OS only!
void fio_config_table_destroy(void); // For EXTERNAL_OS only!
#if defined(EXTERNAL_OS)
void fio_config_vars_decls(void);
#endif


extern int always_rebuild_md; //  ALWAYS_REBUILD_MD
extern int const_archive_nand_commands; //  ARCHIVE_NAND_COMMANDS
extern int auto_attach; //  AUTO_ATTACH
extern int auto_attach_cache; //  AUTO_ATTACH_CACHE
extern int bypass_ecc; //  BYPASS_ECC
extern int bypass_whitening; //  BYPASS_WHITENING
extern int const_cache_linking_supported; //  CACHEBITS_DIFF2
extern int compaction_timeout_ms; //  COMPACTION_TIMEOUT_MS
extern int const_dbgset_compile_dbgprint_out; //  DBGSET_COMPILE_DBGPRINT_OUT
extern int const_dbgset_locations; //  DBGSET_LOCATIONS
extern int const_dbgs_digest; //  DBGS_DIGEST
extern int const_dbgs_dma; //  DBGS_DMA
extern int const_dbgs_ecc; //  DBGS_ECC
extern int const_dbgs_general; //  DBGS_GENERAL
extern int const_dbgs_groom; //  DBGS_GROOM
extern int const_dbgs_inject; //  DBGS_INJECT
extern int const_dbgs_log_file; //  DBGS_LOG_FILE
extern int const_dbgs_lrbtree; //  DBGS_LRBTREE
extern int const_dbgs_media_error; //  DBGS_MEDIA_ERROR
extern int const_dbgs_metadata; //  DBGS_METADATA
extern int const_dbgs_pcie; //  DBGS_PCIE
extern int const_dbgs_ptrim; //  DBGS_PTRIM
extern int const_dbgs_request; //  DBGS_REQUEST
extern int const_dbgs_show_inject; //  DBGS_SHOW_INJECT
extern int const_dextremify; //  DEEXTREMIFY
extern int flashback_mode; //  DEFAULT_FLASHBACK_MODE_ACTION
extern int mfr_bb_allowance_hpcnt; //  DEFAULT_MFR_BB_ALLOWANCE_HPCNT
extern int const_default_packet_size; //  DEFAULT_PACKET_SIZE
extern int disable_msi; //  DISABLE_MSI
extern int disable_rle; //  DISABLE_RLE
extern int dont_whiten; //  DONT_WHITEN
extern int ecc_correction_per_pad_retire; //  ECC_CORRECTION_PER_PAD_RETIRE
extern int ecc_correction_retire_threshold; //  ECC_CORRECTION_RETIRE_THRESHOLD
extern int ecc_correction_target_threshold; //  ECC_CORRECTION_TARGET_THRESHOLD
extern int SupportEnableCacheFlush; //  ENABLE_CACHE_FILE
extern int enable_discard; //  ENABLE_DISCARD
extern int enable_ecc; //  ENABLE_ECC
extern int const_enable_ecc_chunk_share; //  ENABLE_ECC_CHUNK_SHARE
extern int const_enable_error_injection; //  ENABLE_ERROR_INJECTION
extern int const_enable_pcicheck; //  ENABLE_PCICHECK
extern int enable_pcie_device_control_fix; //  ENABLE_PCIE_DEVICE_CONTROL_FIX
extern int const_enable_random_read; //  ENABLE_RANDOM_READ
extern int enable_two_plane; //  ENABLE_TWO_PLANE
extern int const_find_bug_da; //  FIND_BUG_DA
//FIO_BINDIR
extern int const_fio_cache_ditch_threshold_1; //  FIO_CACHE_DITCH_THRESHOLD_1
extern int const_fio_cache_ditch_threshold_2; //  FIO_CACHE_DITCH_THRESHOLD_2
extern int const_fio_cache_ditch_threshold_3; //  FIO_CACHE_DITCH_THRESHOLD_3
extern int const_fio_cache_ditch_threshold_4; //  FIO_CACHE_DITCH_THRESHOLD_4
extern int const_fio_collect_raw_stats; //  FIO_COLLECT_RAW_STATS
//FIO_DATADIR
extern int const_fio_data_groom_consider_idle_rate; //  FIO_DATA_GROOM_CONSIDER_IDLE_RATE
extern int const_fio_data_idle_groom_rate; //  FIO_DATA_IDLE_GROOM_RATE
extern int fio_dev_optimal_blk_size; //  FIO_DEV_BLK_OPTIMAL_BLK_SIZE
extern int fio_dev_wait_timeout_secs; //  FIO_DEV_WAIT_TIMEOUT_SECS
//FIO_DOCDIR
//FIO_DRIVER_NAME
extern int const_fio_fail_fast; //  FIO_FAIL_FAST
extern int force_soft_ecc; //  FIO_FORCE_SOFT_ECC
extern int default_gc_high_water; //  FIO_GC_DEFAULT_HIGH_WATER
extern int default_gc_low_water; //  FIO_GC_DEFAULT_LOW_WATER
extern int const_fio_groomer_default_blocks_per; //  FIO_GROOMER_DEFAULT_BLOCKS_PER
extern int const_fio_groomer_default_data_per; //  FIO_GROOMER_DEFAULT_DATA_PER
extern int const_fio_groomer_default_msg_batch_size; //  FIO_GROOMER_DEFAULT_MSG_BATCH_SIZE
extern int const_fio_groomer_default_request_batch_size; //  FIO_GROOMER_DEFAULT_REQUEST_BATCH_SIZE
extern int const_fio_groomer_max_blocks_per; //  FIO_GROOMER_MAX_BLOCKS_PER
extern int const_fio_groomer_max_data_per; //  FIO_GROOMER_MAX_DATA_PER
extern int const_fio_groom_append_point_retries; //  FIO_GROOM_APPEND_POINT_RETRIES
extern int const_fio_groom_buffer_size; //  FIO_GROOM_BUFFER_SIZE
extern int const_fio_groom_failing; //  FIO_GROOM_FAILING
extern int const_fio_groom_harder_threshold; //  FIO_GROOM_HARDER_THRESHOLD
extern int const_fio_groom_hard_max_exempt_blocks; //  FIO_GROOM_HARD_MAX_EXEMPT_BLOCKS
extern int const_fio_groom_oldest_leb_count; //  FIO_GROOM_OLDEST_LEB_COUNT
extern int const_fio_groom_oldest_leb_interval; //  FIO_GROOM_OLDEST_LEB_INTERVAL
extern int const_fio_groom_poll_interval; //  FIO_GROOM_POLL_INTERVAL
extern int const_fio_groom_soft_max_exempt_blocks; //  FIO_GROOM_SOFT_MAX_EXEMPT_BLOCKS
extern int const_fio_groom_verify; //  FIO_GROOM_VERIFY
//FIO_INCLUDEDIR
extern int const_fio_inject_reclaim_panic; //  FIO_INJECT_RECLAIM_PANIC
//FIO_LIBDIR
extern int const_fio_log_file_pages; //  FIO_LOG_FILE_PAGES
extern int const_fio_lrbtree_isearch_cutoff; //  FIO_LRBTREE_ISEARCH_CUTOFF
//FIO_MANDIR
extern int const_fio_metadata_debug_lrbtree; //  FIO_METADATA_DEBUG_LRBTREE
extern int const_fio_metadata_swap; //  FIO_METADATA_SWAP
//FIO_OEM_DATADIR
//FIO_OEM_LIBDIR
//FIO_OEM_NAME
//FIO_OEM_NAME_FORMAL
//FIO_OEM_NAME_SHORT
//FIO_OEM_SOURCEDIR
extern int const_fio_powercut_detect; //  FIO_POWERCUT_DETECT
extern int_array_t  _preallocate_memory; //  FIO_PREALLOCATE_MEMORY
//FIO_PREFIX
extern int const_fio_print_dangling; //  FIO_PRINT_DANGLING
extern int const_fio_print_digest; //  FIO_PRINT_DIGEST
extern int const_fio_print_groom_stats; //  FIO_PRINT_GROOM_STATS
extern int const_fio_print_object; //  FIO_PRINT_OBJECT
extern int const_fio_reserved_lebs; //  FIO_RESERVED_LEBS
//FIO_SOURCEDIR
//FIO_SYSCONFDIR
extern int flashback_warning_as_failure; //  FLASHBACK_WARNING_AS_FAILURE
extern int force_enable_pcie_device_control_fix; //  FORCE_ENABLE_PCIE_DEVICE_CONTROL_FIX
extern int force_minimal_mode; //  FORCE_MINIMAL_MODE
extern int force_sw_read_completions; //  FORCE_SW_READ_COMPLETIONS
extern int g_fusion_allocation_tripwire; //  FUSION_ALLOCATION_TRIPWIRE
//FUSION_BUILD_VERSION
extern int const_fusion_debug; //  FUSION_DEBUG
extern int const_fusion_debug_cache; //  FUSION_DEBUG_CACHE
extern int const_fusion_debug_memory; //  FUSION_DEBUG_MEMORY
extern int const_fusion_debug_metadata; //  FUSION_DEBUG_METADATA
extern int const_dirfs_supported; //  FUSION_DIRECTFS
extern int const_fusion_dump_cmd_q_on_failure; //  FUSION_DUMP_CMD_Q_ON_FAILURE
extern int const_fusion_include_ktr; //  FUSION_INCLUDE_KTR
//FUSION_MAJOR_VERSION
//FUSION_METADATA_SAVE_WORST_CASE
//FUSION_MICRO_VERSION
//FUSION_MINOR_VERSION
extern int const_packet_size_max; //  FUSION_PACKET_SIZE_MAX
extern int const_packet_size_min; //  FUSION_PACKET_SIZE_MIN
extern int const_fusion_packet_size_must_be_power_of_two; //  FUSION_PACKET_SIZE_MUST_BE_POWER_OF_TWO
extern int const_fusion_sparsefs_support; //  FUSION_SPARSEFS_SUPPORT
//FUSION_SUPPORT_SIMULATED_DMA
extern int const_fusion_use_sw_resource_accounting; //  FUSION_USE_SW_RESOURCE_ACCOUNTING
extern int const_fusion_verify_frob; //  FUSION_VERIFY_FROB
extern int const_fusion_verify_frob_readonly; //  FUSION_VERIFY_FROB_READONLY
//FUSION_VERSION_STRING
extern int groomer_backoff; //  GROOMER_BACKOFF
extern int disable_groomer; //  GROOMER_DISABLE
extern int const_iodrive_allow_1_2_7_fw; //  IODRIVE_ALLOW_1_2_7_FW
extern int const_iodrive_dead_pad_detection_threshold; //  IODRIVE_DEAD_PAD_DETECTION_THRESHOLD
extern int const_iodrive_dead_pad_threshold; //  IODRIVE_DEAD_PAD_THRESHOLD
extern int const_iodrive_debug; //  IODRIVE_DEBUG
extern int const_iodrive_debug_track_all_requests; //  IODRIVE_DEBUG_TRACK_ALL_REQUESTS
extern int const_iodrive_defeat_append_reservations; //  IODRIVE_DEFEAT_APPEND_RESERVATIONS
extern int const_iodrive_disable_pcie_relaxed_ordering; //  IODRIVE_DISABLE_PCIE_RELAXED_ORDERING
extern int iodrive_dma_delay; //  IODRIVE_DMA_DELAY
extern int const_iodrive_gather_nand_stats; //  IODRIVE_GATHER_NAND_STATS
extern int const_iodrive_gather_stats; //  IODRIVE_GATHER_STATS
extern int const_iodrive_inject_pad_failure_frequency; //  IODRIVE_INJECT_PAD_FAILURE_FREQUENCY
extern int const_iodrive_isr_read_completions; //  IODRIVE_ISR_READ_COMPLETIONS
extern int const_iodrive_ktr_enabled; //  IODRIVE_KTR_ENABLED
extern int const_iodrive_large_pcie_mtu; //  IODRIVE_LARGE_PCIE_MTU
extern int iodrive_load_eb_map; //  IODRIVE_LOAD_EB_MAP
extern int iodrive_load_midprom; //  IODRIVE_LOAD_MIDPROM
extern int iodrive_max_ebmap_probe; //  IODRIVE_MAX_EBMAP_PROBE
extern int iodrive_max_read_threshold; //  IODRIVE_MAX_READ_THRESHOLD
extern int max_requests; //  IODRIVE_NUM_REQUEST_STRUCTURES
extern int const_iodrive_packetizer_interrupt_threshold; //  IODRIVE_PACKETIZER_INTERRUPT_THRESHOLD
extern int const_iodrive_print_correctable_grooms; //  IODRIVE_PRINT_CORRECTABLE_GROOMS
extern int const_iodrive_read_dma_interrupt_threshold; //  IODRIVE_READ_DMA_INTERRUPT_THRESHOLD
extern int iodrive_read_retire_threshold; //  IODRIVE_READ_RETIRE_THRESHOLD
extern int iodrive_read_threshold_mlc_scaling; //  IODRIVE_READ_THRESHOLD_MLC_SCALING
extern int iodrive_scan_nv_data; //  IODRIVE_SCAN_NV_DATA
extern int iodrive_simulate_command_queuing_dma; //  IODRIVE_SIMULATE_COMMAND_QUEUING_DMA
extern int const_iodrive_sync_delay_us; //  IODRIVE_SYNC_DELAY_US
extern int const_iodrive_sync_request_data_delay_us; //  IODRIVE_SYNC_REQUEST_DATA_DELAY_US
extern int const_iodrive_sync_request_data_wait_us; //  IODRIVE_SYNC_REQUEST_DATA_WAIT_US
extern int const_iodrive_sync_wait_us; //  IODRIVE_SYNC_WAIT_US
extern int taddr0; //  IODRIVE_TADDR0
extern int taddr1; //  IODRIVE_TADDR1
extern int tcmd0; //  IODRIVE_TCMD0
extern int tcmd1; //  IODRIVE_TCMD1
extern int capacity_warning_threshold; //  IODRIVE_THROTTLE_CAPACITY_WARNING_THRESHOLD
extern int read_only_threshold; //  IODRIVE_THROTTLE_READ_ONLY_THRESHOLD
extern int reduced_write_threshold; //  IODRIVE_THROTTLE_REDUCED_WRITE_THRESHOLD
extern int tintr_hw_wait; //  IODRIVE_TINTR_HW_WAIT
extern int tread0; //  IODRIVE_TREAD0
extern int tread1; //  IODRIVE_TREAD1
extern int iodrive_tread_hw_wait; //  IODRIVE_TREAD_HW_WAIT
extern int iodrive_tread_hw_wait_mlc; //  IODRIVE_TREAD_HW_WAIT_MLC
extern int iodrive_tstat_hw_wait; //  IODRIVE_TSTAT_HW_WAIT
extern int iodrive_tstat_hw_wait_mlc; //  IODRIVE_TSTAT_HW_WAIT_MLC
extern int twrite0; //  IODRIVE_TWRITE0
extern int twrite1; //  IODRIVE_TWRITE1
extern int use_command_timeouts; //  IODRIVE_USE_COMMAND_TIMEOUTS
extern int const_iodrive_use_dpc; //  IODRIVE_USE_DPC
extern int const_iodrive_use_pad_remap; //  IODRIVE_USE_PAD_REMAP
extern int fio_scheduler_switch_threshold; //  IO_SCHEDULER_SWITCH_THRESHOLD
extern int log_scan_yield_interval_ms; //  LOG_SCAN_YIELD_INTERVAL_MSECS
extern int const_lrbtree_profile; //  LRBTREE_PROFILE
extern int const_lrb_debug_message; //  LRB_DEBUG_MESSAGE
extern int const_lrb_statistics; //  LRB_STATISTICS
extern int max_md_blocks_per_device; //  MAX_MD_BLOCKS_PER_DEVICE
extern int const_fio_memos_preallocated_objects; //  MEMOS_PREALLOCATED_OBJECTS
//NUCLEON
extern int num_exclude_devices; //  NUM_EXCLUDE_DEVICES
extern int num_include_devices; //  NUM_INCLUDE_DEVICES
extern int fio_ktr_mask; //  OVERRIDE_KTR_MASK
extern int parallel_attach; //  PARALLEL_ATTACH
extern int global_slot_power_limit_mw; //  PCIe_GLOBAL_SLOT_POWER_LIMIT
extern int persistent_discard; //  PERSISTENT_DISCARD
extern int const_pipeline_accounting; //  PIPELINE_ACCOUNTING
extern int const_print_append_failures; //  PRINT_APPEND_FAILURES
extern int const_print_append_point; //  PRINT_APPEND_POINT
extern int const_print_depacketizer; //  PRINT_DEPACKETIZER
extern int const_print_dma; //  PRINT_DMA
extern int const_print_dma_read; //  PRINT_DMA_READ
extern int const_print_dma_write; //  PRINT_DMA_WRITE
extern int const_print_ecc_read; //  PRINT_ECC_READ
extern int const_print_ecc_write; //  PRINT_ECC_WRITE
extern int const_print_groom_ranges; //  PRINT_GROOM_RANGES
extern int const_print_groom_scan; //  PRINT_GROOM_SCAN
extern int const_print_idle_groom; //  PRINT_IDLE_GROOM
extern int const_print_leb_operations; //  PRINT_LEB_OPERATIONS
extern int const_print_nand_read; //  PRINT_NAND_READ
extern int const_print_nand_read_details; //  PRINT_NAND_READ_DETAILS
extern int const_print_nand_write; //  PRINT_NAND_WRITE
extern int const_print_packetizer; //  PRINT_PACKETIZER
extern int const_print_parity_operations; //  PRINT_PARITY_OPERATIONS
extern int const_print_progress; //  PRINT_PROGRESS
extern int const_print_reattach; //  PRINT_REATTACH
extern int const_print_requests; //  PRINT_REQUESTS
extern int const_print_request_list; //  PRINT_REQUEST_LIST
extern int const_print_resources; //  PRINT_RESOURCES
extern int const_print_scan; //  PRINT_SCAN
extern int const_print_scan_entries; //  PRINT_SCAN_ENTRIES
extern int register_as_cciss; //  REGISTER_AS_CCISS
extern int const_spinlock_stats; //  SPINLOCK_STATS
extern int strict_sync; //  STRICT_SYNC
extern int SupportFileDumpFlag; //  SUPPORT_DUMP
extern int SupportFileHibernationFlag; //  SUPPORT_HIBERNATION
extern int thermal_throttle_disable; //  THERMAL_THROTTLE_DISABLE
extern int use_large_pcie_rx_buffer; //  USE_LARGE_PCIE_RX_BUFFER
extern int use_new_io_sched; //  USE_NEW_IO_SCHED

#endif /* __KERNEL__ */
#endif // __CONFIG_VARS_EXTERNS_H__
